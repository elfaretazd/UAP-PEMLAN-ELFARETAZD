package UAP.models;

import UAP.bases.Shape;
import UAP.interfaces.MassCalculable;
import UAP.interfaces.MassConverter;
import UAP.interfaces.PIRequired;
import UAP.interfaces.ShippingCostCalculator;
import UAP.interfaces.ThreeDimensional;

public class Sphere extends Shape implements ThreeDimensional, MassCalculable, PIRequired, MassConverter, ShippingCostCalculator {
    private double radius;

    public Sphere() {
        super();
        setName("Donat tanpa lubang"); 
    }

    public Sphere(double radius) {
        this(); 
        this.radius = radius;
    }

    public double getRadius() {
        return radius;
    }

    @Override
    public double getVolume() {
        return Math.ceil((4.0 / 3.0) * PI * (radius * radius * radius)) ;
    }

    @Override
    public double getSurfaceArea() {
        return 4 * PI * (radius * radius);
    }

    @Override
    public double getMass() {
        return DENSITY * getSurfaceArea() * THICKNESS;
    }

    @Override
    public double gramToKilogram(double gram) {
        return gram / DENOMINATOR;
    }

    @Override
    public double calculateCost(double massInKg) {
        return Math.ceil(massInKg) * PRICE_PER_KG;
    }

    @Override
    public void printInfo() {
        System.out.println("=============================================");
        System.out.println("Volume : " + getVolume());
        System.out.println("Luas permukaan : " + getSurfaceArea());
        System.out.println("Massa : " + getMass());
        System.out.println("Massa dalam kg : " + gramToKilogram(getMass()));
        System.out.println("Biaya kirim : Rp" + (int) calculateCost(gramToKilogram(getMass())));
    }
}
